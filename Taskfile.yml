# https://taskfile.dev

version: '3'

vars:
  EXENAMEP1: producer.exe
  EXENAMEP2: consumer.exe

tasks:
# COMPOSE
  up:
    cmds:
      - docker compose -f ./infra/compose-dev.yaml up -d

  build:
    cmds:
      - docker compose -f ./infra/compose-dev.yaml build --no-cache
      - docker compose -f ./infra/compose-dev.yaml up -d

  down:
    cmds:
      - docker compose -f ./infra/compose-dev.yaml down

# PRODUCER
  build-producer:
    cmds:
      - go build -o ./services/producer/bin/{{.EXENAMEP1}} ./services/producer/main.go

  run-producer:
    deps: [build-producer]
    cmds:
      - ./services/producer/bin/{{.EXENAMEP1}}

  build-producer-dockerfile:
    cmds:
      - docker build -f ./infra/producer.Dockerfile -t rabbit-producer:latest .

# CONSUMER
  build-consumer:
    cmds:
      - go build -o ./services/consumer/bin/{{.EXENAMEP2}} ./services/consumer/main.go

  run-consumer:
    deps: [build-consumer]
    cmds:
      - ./services/consumer/bin/{{.EXENAMEP2}}

  build-consumer-dockerfile:
    cmds:
      - docker build -f ./infra/consumer.Dockerfile -t rabbit-consumer:latest .

# UTILITY
  loc:
    cmds:
      - cloc . --exclude-dir=.git

  port:
    cmds:
      - netstat -ano | findstr {{.CLI_ARGS}}

# TESTING
  rabbit-test:
    cmds:
      - docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 -p 5672:5672 rabbitmq:3-management


