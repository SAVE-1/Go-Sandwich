# https://taskfile.dev

version: '3'

vars:
  EXENAMEP1: producer.exe
  EXENAMEP2: consumer.exe

tasks:
# COMPOSE
  compose-up:
    cmds:
      - docker compose up -d # -d == silent compose

  compose-down:
    cmds:
      - docker compose down

# PRODUCER
  build-producer:
    cmds:
      - go build -o ./producer/bin/{{.EXENAMEP1}} ./producer/main.go
    silent: true

  run-producer:
    deps: [build-producer]
    cmds:
      - ./producer/bin/{{.EXENAMEP1}}
    silent: true

  build-producer-dockerfile:
    cmds:
      - docker build -t rabbitmq-producer:latest -f ./producer.Dockerfile --tag rabbitmq-producer . 

# CONSUMER
  build-consumer:
    cmds:
      - go build -o ./consumer/bin/{{.EXENAMEP2}} ./consumer/main.go
    silent: true

  run-consumer:
    deps: [build-consumer]
    cmds:
      - ./consumer/bin/{{.EXENAMEP2}}
    silent: true

  build-consumer-dockerfile:
    cmds:
      - docker build -t docker-rabbitmq-consumer:latest -f ./consumer.Dockerfile --tag rabbit-consumer .

# UTILITY
  loc:
    cmds:
      - cloc . --exclude-dir=.git

  port:
    cmds:
      - netstat -ano | findstr {{.CLI_ARGS}}

# TESTING
  rabbit-test:
    cmds:
      - docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 -p 5672:5672 rabbitmq:3-management
