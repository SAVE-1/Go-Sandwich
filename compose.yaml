services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit-consumer:
    image: "rabbitmq-consumer"
    build:
      context: .
      dockerfile: consumer.Dockerfile
    restart: always
    networks:
      - backend
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/

  rabbit-producer:
    image: "rabbitmq-producer"
    ports:
      - "8083:8083"
    build:
      context: .
      dockerfile: producer.Dockerfile
    restart: always
    networks:
      - backend
      - frontend
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - PRODUCER_HOST_PORT=8083

# TESTING

  envoy:
    image: envoyproxy/envoy:dev-f384ab2b3e3aa0564ef25f57dc2ed8ad61eaf0cb
    ports:
      - "10000:10000"
    volumes:
      - ./infra/envoy/envoy.yaml:/etc/envoy/envoy.yaml


  # tyk-gateway:
  #   image: docker.tyk.io/tyk-gateway/tyk-gateway:v5.5.0
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - tyk
  #   volumes:
  #     - ./infra/tyk-api-gateway/tyk.standalone.conf:/opt/tyk-gateway/tyk.conf
  #     - ./infra/tyk-api-gateway/apps:/opt/tyk-gateway/apps
  #     - ./infra/tyk-api-gateway/middleware:/opt/tyk-gateway/middleware
  #     - ./infra/tyk-api-gateway/certs:/opt/tyk-gateway/certs
  #     - ./infra/tyk-api-gateway/policies:/opt/tyk-gateway/policies
  #   environment:
  #     - TYK_GW_SECRET=foo
  #   depends_on:
  #     - tyk-redis

  # tyk-redis:
  #   image: redis:6.2.7-alpine
  #   networks:
  #     - tyk
  #   ports:
  #     - 6379:6379
# TESTING

volumes:
  rabbitmq_data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
  tyk:
    driver: bridge
